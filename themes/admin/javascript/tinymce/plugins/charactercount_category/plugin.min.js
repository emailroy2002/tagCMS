tinymce.PluginManager.add('charactercount_category', function(editor) {
	var self = this, countre, cleanre;

	// Included most unicode blocks see: http://en.wikipedia.org/wiki/Unicode_block
	// Latin-1_Supplement letters, a-z, u2019 == &rsquo;
	countre = editor.getParam('wordcount_countregex', /[\w\u2019\x27\-\u00C0-\u1FFF]+/g);
	cleanre = editor.getParam('wordcount_cleanregex', /[0-9.(),;:!?%#$?\x27\x22_+=\\\/\-]*/g);

	function update() {
		editor.theme.panel.find('#charactercount_category').text(['characters: {0}, limit : 100', self.getCount()]);
	}
    
	editor.on('init', function() {
		var statusbar = editor.theme.panel && editor.theme.panel.find('#statusbar')[0];
		if (statusbar) {
			window.setTimeout(function() {
				statusbar.insert({
					type: 'label',
					name: 'charactercount_category',
					text: ['characters: {0} , limit : 100', self.getCount()],
					classes: 'wordcount',
					disabled: editor.settings.readonly
				}, 0);
				editor.on('setcontent beforeaddundo', update);
				editor.on('keyup', function(e) {					
				    update();					
				});
			}, 0);
		}
	});

	self.getCount = function() {
		var tx = editor.getContent({format: 'html'});
		var tc = 0;

		if (tx) {
            tc = tx.length;
		}

		return tc;
	};
});